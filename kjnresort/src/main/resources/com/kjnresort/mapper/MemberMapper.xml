<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kjnresort.mapper.MemberMapper">
	<!-- 쿼리 보관 -->
	<sql id="criteria1">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'O'.toString()">
							status = 1
						</when>
						<when test="type == 'X'.toString()">
							status = 0
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- 쿼리 보관 -->
	<sql id="criteria2">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type2' collection="typeArr2">
				<trim prefix="OR">
					<choose>
						<when test="type2 == 'I'.toString()">
							id LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type2 == 'N'.toString()">
							name LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type2 == 'P'.toString()">
							phoneNumber LIKE '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- 회원 정지상태로 수정 -->
	<update id="statusBlock">
		UPDATE t_member SET status = 0 WHERE id = #{id}
	</update>
	
	
	<!-- 회원 일반상태로 수정 -->
	<update id="statusNormal">
		UPDATE t_member SET status = 1 WHERE id = #{id}
	</update>
	
	
	
	<!-- 회원 상세조회(관리자) -->
	<select id="readMember" resultType="com.kjnresort.domain.MemberVO">
		SELECT * FROM t_member WHERE id = #{id}
	</select>
	
	
	
	<!-- 전체 회원 수 가져오기 -->
	<select id="totalMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM t_member
		WHERE
		<!-- 보관해 둔 쿼리 사용 -->
		<include refid="criteria1"></include>
		<include refid="criteria2"></include>
		id IS NOT NULL
	</select>
	
	
	
	<select id="memberList" resultType="com.kjnresort.domain.MemberVO">
		<!-- 두 번째 페이지 최신 순으로 출력 -->
		<!-- 아래대로 실행하면 1페이지 나옴 -->
		<![CDATA[
		SELECT *
		FROM(
			SELECT /*+INDEX_DESC(t_member idx_member_id)*/
				ROWNUM rn, id, name, phoneNumber, status
			FROM t_member
			WHERE
		]]>
			
			<!-- 보관해 둔 쿼리 사용 -->
			<include refid="criteria1"></include>
			<include refid="criteria2"></include>
					
		<![CDATA[
			ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum}-1) * #{amount} 
		]]>
	</select>
	
	
	
	
	
	<!-- 내가쓴 후기 전체 데이터 개수 가져오기 -->
	<select id="getTotalMyReview" resultType="int">
		<![CDATA[
		SELECT COUNT(*)
		FROM t_review
		WHERE reviewNo > 0 AND id = #{id}
		]]>
	</select>
	
	
	
	<!-- 내가 쓴 리뷰 목록 페이징 -->
	<select id="myreviewList" resultType="com.kjnresort.domain.ReviewVO">
		<!-- 두 번째 페이지 최신 순으로 출력 -->
		<!-- 아래대로 실행하면 1페이지 나옴 -->
		<![CDATA[
		SELECT *
		FROM(
			SELECT /*+INDEX_DESC(t_review SYS_C0011654)*/
				ROWNUM rn, reviewNo, category, title, id, regdate, viewCnt
			FROM t_review
			WHERE
			ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum}-1) * #{amount} AND id = #{id}
		]]>
	</select>
	
	
	
	<!-- 마이페이지 회원탈퇴 -->
	<delete id="delete">
		DELETE FROM t_member WHERE id = #{id}
	</delete>
	
	
	<!-- 마이페이지 비밀번호 공백일경우 비밀번호만 제외하고 수정 -->
	<update id="mypageUpdate2">
		UPDATE t_member SET phoneNumber = #{phoneNumber}, address = #{address} WHERE id = #{id}
	</update>
	
	
	<!-- 마이페이지 수정 -->
	<update id="mypageUpdate">
		UPDATE t_member SET pw = #{pw}, phoneNumber = #{phoneNumber}, address = #{address} WHERE id = #{id}
	</update>
	
	<!-- 마이페이지 조회 -->
	<select id="mypageRead" resultType="com.kjnresort.domain.MemberVO">
		SELECT * FROM t_member WHERE id = #{id} 
	</select>
	
	
	<!-- 비밀번호 변경 -->
	<update id="pwUpdate">
		UPDATE t_member SET pw = #{pw} WHERE id = #{id}
	</update>
	
	
	<!-- 비밀번호찾기 -->
	<select id="findPw" resultType="String">
		SELECT regDate FROM t_member WHERE id = #{id} and name = #{name} and phoneNumber = #{phoneNumber}
	</select>
	
	
	<!-- 아이디찾기 -->
	<select id="findId" resultType="String">
		SELECT id FROM t_member WHERE name = #{name} and phoneNumber = #{phoneNumber}
	</select>		
	
	
	<!-- 회원등록(가입) -->
	<insert id="insert">
		INSERT INTO t_member(id, pw, name, phoneNumber, birth, gender, address)
		VALUES(#{id}, #{pw}, #{name}, #{phoneNumber}, #{birth}, #{gender}, #{address})
	</insert>		
	
	<!-- 회원권한등록(가입) -->
	<insert id="insertAuth">
		INSERT INTO t_member_auth(id)
		VALUES(#{id})
	</insert>																																																																																																																																																																																																																															
	
	
	<!-- 회원가입 ID중복체크 -->
	<select id="idCheck" resultType="com.kjnresort.domain.MemberVO">
		SELECT id FROM t_member WHERE id = #{id}
	</select>
	
	<!-- 회원가입 핸드폰번호 중복체크 -->
	<select id="phoneNumberCheck" resultType="com.kjnresort.domain.MemberVO">
		SELECT phoneNumber FROM t_member WHERE phoneNumber = #{phoneNumber}
	</select>
	
	
	<resultMap type="com.kjnresort.domain.MemberVO" id="memberMap">
		<id property="id" column="id"/>						<!-- Join 조건 -->
		<result property="pw" column="pw"/>
		<result property="name" column="name"/>
		<result property="phoneNumber" column="phonenumber"/>
		<result property="birth" column="birth"/>
		<result property="gender" column="gender"/>
		<result property="address" column="address"/>
		<result property="status" column="status"/>
		<collection property="authList" resultMap="authMap"/>
	</resultMap>
	
	<resultMap type="com.kjnresort.domain.AuthVO" id="authMap">
		<result property="id" column="id"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<!-- 권한조회 -->
	<select id="read" resultMap="memberMap">	
		select t.id, pw, name, regdate, auth
		from t_member t, t_member_auth a
		where t.id = a.id 
		and t.id = #{id} and pw = #{pw}
	</select>

</mapper>