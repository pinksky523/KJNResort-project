<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


<!-- <bean id="customAccessDenied" class="com.kjnresort.security.CustomAccessDeniedHandler"></bean> -->
<!-- <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean> -->
<!-- <bean id="customNoOpPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<bean id="customUserDetailsService" class="com.kjnresort.security.CustomUserDetailsService"/>

<security:http>
<!-- <security:http auto-config="true" use-expressions="true"> -->

	<!-- <security:intercept-url pattern="/" access="permitAll"/>
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/> -->
	
	<!-- 로그인 처리 -->
	<!-- 로그인 성공 핸들러 지정 -->
	<!-- <security:form-login/> -->
	<security:form-login login-page="/customLogin" default-target-url="/" />
	
	<!-- 로그아웃 처리 -->
	<!-- 로그아웃하면 자동 로그인 관련 쿠키 삭제 -->
	<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"/>
	<!-- 로그아웃 후 다른 페이지로 넘기고 싶다면, logout-success-url 속성 이용하면 됨 -->
	
	<!-- 접근 권한 메시지 핸들러 지정 -->
	<!-- <security:access-denied-handler error-page="/accessError"/> -->
	<!-- <security:access-denied-handler ref="customAccessDenied"/> -->
	
	<!-- DB를 이용한 자동 로그인 지정 -->
	<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	
</security:http>


<security:authentication-manager>

	<security:authentication-provider user-service-ref="customUserDetailsService"><!-- 실제 인증처리하는애 -->
		<!-- <security:user-service>
			<security:user name="member" password="{noop}1111" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}1111" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service> -->
		<!-- <security:jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="SELECT userid, userpw, enabled FROM tbl_member WHERE userid=?"
		 	authorities-by-username-query="SELECT userid, auth FROM tbl_member_auth WHERE userid=?"/> -->
		 	
		<security:password-encoder ref="bcryptPasswordEncoder"/>
<!-- 		<security:password-encoder ref="customNoOpPasswordEncoder"/> -->
	</security:authentication-provider>
	
</security:authentication-manager>


</beans>
