<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


<bean id="customAccessDenied" class="com.kjnresort.security.CustomAccessDeniedHandler"></bean>
<bean id="customLoginSuccess" class="com.kjnresort.security.CustomLoginSuccessHandler"></bean>
<!-- <bean id="customNoOpPasswordEncoder" class="com.kjnresort.security.CustomNoOpPasswordEncoder"></bean> -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<bean id="customUserDetailsService" class="com.kjnresort.security.CustomUserDetailsService"/>

<security:http>
<!-- <security:http auto-config="true" use-expressions="true"> -->

	<security:intercept-url pattern="/common/**" access="permitAll"/>
	<security:intercept-url pattern="/member/**" access="hasRole('ROLE_MEMBER')"/>
	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	<!-- 권한 줄거 있으면 이 위에다가 추가하시오. permitALL밑에 추가 금지(밑에하면 써도 안먹힘) -->

	<security:intercept-url pattern="/**" access="permitAll"/>
	
	<!-- 로그인 처리 -->
	<!-- 로그인 성공 핸들러 지정 -->
	 <!-- <security:form-login/> --> 
	<security:form-login login-page="/common/customLogin" default-target-url="/" authentication-success-handler-ref="customLoginSuccess"
	authentication-failure-url="/common/customLoginError" />
	
	<!-- 로그아웃 처리 -->
	<!-- 로그아웃하면 자동 로그인 관련 쿠키 삭제 -->
	<security:logout logout-url="/common/customLogout" logout-success-url="/common/home" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"/>
	<!-- 로그아웃 후 다른 페이지로 넘기고 싶다면, logout-success-url 속성 이용하면 됨 -->
	
	<!-- 접근 권한 메시지 핸들러 지정 -->
	<!-- <security:access-denied-handler error-page="/common/accessError"/> -->
	<security:access-denied-handler ref="customAccessDenied"/>
	
	<!-- DB를 이용한 자동 로그인 지정 -->
	<!-- <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/> -->
	
</security:http>


<security:authentication-manager>

	<security:authentication-provider><!-- 실제 인증처리하는애 -->
	
		<!-- 아래 dataSource(실제DB 계정비교)를 사용하게 되면서 주석처리함. 이건 테스트용계정 -->	
		<!-- <security:user-service>
			<security:user name="member" password="{noop}11" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}11" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service> -->
		
		<!-- 기존 테이블이 없을경우 생성해서 DB비교할 경우 -->
		<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->
		
		<!-- 기존 테이블과 비교(권한)할 경우 -->
		<security:jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="SELECT id, pw, status FROM t_member WHERE id = ?"
		 	authorities-by-username-query="SELECT id, auth FROM t_member_auth WHERE id = ?"/>
		 	
		<security:password-encoder ref="bcryptPasswordEncoder"/>
		<!-- <security:password-encoder ref="customNoOpPasswordEncoder"/> -->
		
	</security:authentication-provider>
	
	
	<security:authentication-provider user-service-ref="customUserDetailsService">
	</security:authentication-provider>
	
	</security:authentication-manager>


</beans>